/*#########################################################################*/
/*                             Project variables                           */
/*#########################################################################*/

ext {
	subProjectName = "snake-yml"
}

/*#########################################################################*/
/*                               DEPENDENCIES                              */
/*#########################################################################*/

dependencies {

	testCompile "org.codehaus.groovy:groovy-all:2.5.2"
	testCompile "net.bytebuddy:byte-buddy:1.9.1"
	testCompile "org.objenesis:objenesis:2.6"
	testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
	testCompile "org.yaml:snakeyaml:1.23"
	testCompile "org.spockframework:spock-core:1.2-groovy-2.5"
	testCompile "org.hamcrest:hamcrest-core:1.3"
	testCompile("com.athaydes:spock-reports:1.6.1") {
		transitive = false
	}
	testCompile "org.slf4j:slf4j-api:1.7.25"
	testCompile "ch.qos.logback:logback-core:1.2.3"
	testCompile "ch.qos.logback:logback-classic:1.2.3"
	testCompile "io.rest-assured:rest-assured:3.1.1"
}


/*#########################################################################*/
/*                                PROPERTIES                               */
/*#########################################################################*/

test.doFirst {
	def availableEnvironments = ['dev', 'preview', 'live']

	if (!availableEnvironments.contains(testEnvironment)) {
		def message = "Target environment '${testEnvironment}' not supported. Please use one of the following: " + availableEnvironments.join(", ")
		throw new TaskExecutionException(setUpEnvironmentConfiguration, new ResourceException(message))
	}

	println "***"
	println "Target environment: '${testEnvironment}'"
	println "***"

	systemProperty 'environment', "${testEnvironment}"
	systemProperty 'spring.profiles.active', "${testEnvironment}"
	systemProperty 'com.athaydes.spockframework.report.projectName', "${subProjectName} against [${testEnvironment}]"
	systemProperty 'com.athaydes.spockframework.report.projectVersion', "${version}"
	systemProperty 'com.athaydes.spockframework.report.outputDir',  "build/spock-reports-${testEnvironment}"
	systemProperty 'com.athaydes.spockframework.report.showCodeBlocks',  "true"
}
